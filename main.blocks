<xml xmlns="https://developers.google.com/blockly/xml"><variables><variable id="{;HYa#Q^OD_GGZ46bK/Q">item</variable><variable id="Goi1I,HVSapHUF2BKvU@">x</variable><variable id="c9Scu%@N3zjgrM.hjEH@">y</variable></variables><block type="pxt-on-start" id="oa*.tBA|c4pEq-d:=_HC" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="EFzoQPQYNl?d!,`c;^04" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let y = 0" numlines="1" declaredvars="y"></mutation><next><block type="typescript_statement" id="r}bkTWqJd[!L8gAF`]E}" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let x = 0" numlines="1" declaredvars="x"></mutation><next><block type="typescript_statement" id="lcv1j8^hQc3mW9{V~;Gj" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let i = 0" numlines="1" declaredvars="i"></mutation><next><block type="variables_set" id="x]i(]*C+$vEwYycny}+Q"><field name="VAR" id="{;HYa#Q^OD_GGZ46bK/Q">item</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="game_create_sprite" id="?l$q^PX4Nf^OgYWM!.1R"><value name="x"><block type="variables_get" id="Fu_Cr,5Cfjd~d)6$jOpE"><field name="VAR" id="Goi1I,HVSapHUF2BKvU@">x</field></block></value><value name="y"><block type="variables_get" id="Tl^S?(m]}:Nxr7]3|S4L"><field name="VAR" id="c9Scu%@N3zjgrM.hjEH@">y</field></block></value></block></value><next><block type="typescript_statement" id="2`SY)FVi[AabH~Kh-xye" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="forever(function on_forever() {" line1="    let f: number;" line2="    let n: number;" line3="    " line4="    while (1) {" line5="        x = item.get(LedSpriteProperty.X)" line6="        y = item.get(LedSpriteProperty.Y)" line7="        if (input.buttonIsPressed(Button.A)) {" line8="            game.pause()" line9="            break" line10="        }" line11="        " line12="        basic.pause(150)" line13="        item.move(1)" line14="        i += 1" line15="        if (i == 4) {" line16="            item.turn(Direction.Right, 90)" line17="            i = 0" line18="        }" line19="        " line20="    }" line21="    basic.pause(500)" line22="    if (Math.abs(item.get(LedSpriteProperty.Direction)) == 90) {" line23="        led.plot(Math.ceil(x / 2) + 1, item.get(LedSpriteProperty.Direction) / 90 + y)" line24="    } else {" line25="        led.plot(x - item.get(LedSpriteProperty.Direction) / 90 + 1, Math.ceil(y / 2) + 1)" line26="    }" line27="    " line28="    led.plotBrightness(2, 2, 255)" line29="    basic.pause(200)" line30="    for (f = 0; f &lt; 3; f++) {" line31="        for (n = 0; n &lt; 3; n++) {" line32="            if (f == 1 &amp;&amp; n == 1) {" line33="                continue" line34="            }" line35="            " line36="            led.plotBrightness(f + 1, n + 1, 128)" line37="        }" line38="    }" line39="    basic.pause(200)" line40="    for (f = 0; f &lt; 5; f++) {" line41="        if (f == 0 || f == 4) {" line42="            for (n = 1; n &lt; 4; n++) {" line43="                led.plotBrightness(n, f, 64)" line44="            }" line45="        } else {" line46="            for (n = 0; n &lt; 5; n += 4) {" line47="                led.plotBrightness(n, f, 64)" line48="            }" line49="        }" line50="        " line51="    }" line52="    basic.pause(400)" line53="    images.iconImage(IconNames.Chessboard).showImage(0)" line54="    game.resume()" line55="})" numlines="56"></mutation></block></next></block></next></block></next></block></next></block></statement></block></xml>